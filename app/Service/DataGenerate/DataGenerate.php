<?php


namespace App\Service\DataGenerate;


use Mockery\Exception;

class DataGenerate implements DataGenerateInterface
{
    /**
     * @Notes: 获取UUID
     * @Interface uuid
     * @param string $format 分隔符
     * @return string
     * @Author: TS
     * @Time: 2020-06-16   20:19
     */
    public function uuid(string $format = ''): string
    {
        $charid = strtoupper(md5(uniqid(mt_rand(), true)));
        $uuid = substr($charid, 0, 8) . $format
            . substr($charid, 8, 4) . $format
            . substr($charid, 12, 4) . $format
            . substr($charid, 16, 4) . $format
            . substr($charid, 20, 12);
        return $uuid;
    }

    /**
     * @Notes:模拟生成中文
     * @Interface china
     * @param int $length 生成汉字数量
     * @return string
     * @Author: TS
     * @Time: 2020-06-16   20:48
     */
    public function chinese(int $length = 1): string
    {
        $char = '';
        for ($i = 0; $i < $length; $i++) {
            // 使用chr()函数拼接双字节汉字，前一个chr()为高位字节，后一个为低位字节
            $tmp = chr(mt_rand(0xB0, 0xD0)) . chr(mt_rand(0xA1, 0xF0));
            // 转码
            $char .= iconv('GB2312', 'UTF-8', $tmp);
        }
        return $char;
    }

    /**
     * @Notes: 模拟生成字符串
     * @Interface char
     * @param int $length 长度 默认16位
     * @return bool|string
     * @Author: TS
     * @Time: 2020-06-16   20:48
     */
    public function char(int $length = 16): string
    {
        $str = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890';
        if ($length > strlen($str) - 1) {
            $length = 16;
        }
        $randStr = str_shuffle($str);//打乱字符串
        $rands = substr($randStr, 0, $length);//substr(string,start,length);返回字符串的一部分
        return $rands;
    }

    /**
     * @Notes: 模拟生成姓名
     * @Interface name
     * @param string $length 名 长度
     * @return mixed|string
     * @Author: TS
     * @Time: 2020-06-16   20:47
     */
    public function name(int $length = -1): string
    {
        if ($length === -1) {
            $length = rand(1, 2);    //不设置则随机生成1-2位名
        }
        //百家姓
        $prefixArr = ["李", "王", "张", "刘", "陈", "杨", "赵", "黄", "周", "吴", "徐", "孙", "胡", "朱", "高", "林", "何", "郭", "马",
            "罗", "梁", "宋", "郑", "谢", "韩", "唐", "冯", "于", "董", "萧", "程", "曹", "袁", "邓", "许", "傅", "沈", "曾", "彭", "吕", "苏",
            "卢", "蒋", "蔡", "贾", "丁", "魏", "薛", "叶", "阎", "余", "潘", "杜", "戴", "夏", "钟", "汪", "田", "任", "姜", "范", "方", "石",
            "姚", "谭", "廖", "邹", "熊", "金", "陆", "郝", "孔", "白", "崔", "康", "毛", "邱", "秦", "江", "史", "顾", "侯", "邵", "孟", "龙",
            "万", "段", "章", "钱", "汤", "尹", "黎", "易", "常", "武", "乔", "贺", "赖", "龚", "文", "庞", "樊", "兰", "殷", "施", "陶", "洪",
            "翟", "安", "颜", "倪", "严", "牛", "温", "芦", "季", "俞", "章", "鲁", "葛", "伍", "韦", "申", "尤", "毕", "聂", "丛", "焦", "向",
            "柳", "邢", "路", "岳", "齐", "沿", "梅", "莫", "庄", "辛", "管", "祝", "左", "涂", "谷", "祁", "时", "舒", "耿", "牟", "卜", "路",
            "詹", "关", "苗", "凌", "费", "纪", "靳", "盛", "童", "欧", "甄", "项", "曲", "成", "游", "阳", "裴", "席", "卫", "查", "屈", "鲍",
            "位", "覃", "霍", "翁", "隋", "植", "甘", "景", "薄", "单", "包", "司", "柏", "宁", "柯", "阮", "桂", "闵", "欧阳", "解", "强", "柴",
            "华", "车", "冉", "房", "边", "辜", "吉", "饶", "刁", "瞿", "戚", "丘", "古", "米", "池", "滕", "晋", "苑", "邬", "臧", "畅", "宫",
            "来", "嵺", "苟", "全", "褚", "廉", "简", "娄", "盖", "符", "奚", "木", "穆", "党", "燕", "郎", "邸", "冀", "谈", "姬", "屠", "连",
            "郜", "晏", "栾", "郁", "商", "蒙", "计", "喻", "揭", "窦", "迟", "宇", "敖", "糜", "鄢", "冷", "卓", "花", "仇", "艾", "蓝", "都",
            "巩", "稽", "井", "练", "仲", "乐", "虞", "卞", "封", "竺", "冼", "原", "官", "衣", "楚", "佟", "栗", "匡", "宗", "应", "台", "巫",
            "鞠", "僧", "桑", "荆", "谌", "银", "扬", "明", "沙", "薄", "伏", "岑", "习", "胥", "保", "和", "蔺"
        ];
        //常见中文字
        $suffixArr = ["张", "吉", "惟", "林", "国", "瑞", "玟", "书", "雅", "南", "江", "奕", "云", "刘", "柏", "宏", "阮", "建", "安", "子", "帆", "夏", "志", "豪", "茹", "定", "李", "中", "冰", "黄", "文", "隆", "谢", "彦", "傅", "智", "翔", "洪", "振", "霞", "姿", "婷", "荣", "康", "吕", "致", "盈", "方", "一", "强", "黎", "芸", "贵", "郑", "伊", "雯", "雷", "进", "宝", "吴", "美", "心", "真", "王", "珠", "郭", "芳", "天", "惠", "陈", "曹", "敏", "侑", "依", "婉", "璇", "玉", "蔡", "昌", "梦", "家", "纶", "丽", "昆", "育", "泉", "欢", "韵", "如", "肇", "芬", "卢", "木", "仲", "成", "白", "兆", "翊", "丁", "汉", "臻", "佳", "舒", "绿", "珮", "周", "芷", "妤", "虹", "伦", "琼", "倪", "怡", "妃", "杨", "佩", "旺", "盛", "玫", "青", "许", "孟", "涵", "小", "爱", "恩", "龙", "朱", "政", "廷", "邓", "诗", "倩", "俊", "伯", "馨", "学", "翁", "思", "翰", "玲", "海", "来", "武", "淑", "金", "琪", "赖", "宜", "霖", "仪", "湖", "民", "刚", "慧", "颖", "沈", "君", "伶", "高", "咏", "钰", "儒", "潘", "欣", "祯", "叶", "洁", "启", "梁", "哲", "宇", "晓", "萍", "铭", "茂", "以", "瑜", "逸", "采", "竹", "水", "乐", "蓉", "韩", "健", "毓", "士", "杰", "萱", "珍", "苏", "素", "达", "何", "琳", "俞", "幸", "秋", "维", "筠", "玮", "信", "峰", "培", "查", "舜", "易", "徐", "紫", "富", "博", "柯", "乔", "喜", "胡", "睿", "纯", "月", "百", "菁", "娥", "珊", "必", "辰", "耀", "华", "彭", "郁", "秀", "罗", "静", "蓁", "绍", "韦", "宁", "蒋", "毛", "展", "廖", "伟", "元", "映", "超", "莉", "火", "邱", "枝", "大", "雪", "升", "瑶", "柔", "治", "妹", "简", "昀", "秦", "娇", "仁", "和", "贤", "晴", "桦", "辛", "坤", "涂", "琬", "凯", "修", "赵", "吟", "裕", "忠", "石", "春", "右", "星", "冠", "钟", "庭", "茜", "薇", "昭", "祥", "宋", "合", "圣", "军", "溥", "冯", "轩", "嘉", "劭", "甄", "威", "勋", "亚", "东", "姵", "钧", "连", "礼", "忆", "孝", "淳", "岳", "平", "若", "承", "姚", "姜", "鸿", "德", "任", "骏", "生", "蕙", "意", "琇", "碧", "懿", "凡", "靖", "琴", "温", "宗", "其", "泰", "财", "筑", "正", "燕", "雨", "世", "人", "友", "群", "戎", "台", "阙", "贞", "扬", "顺", "唐", "福", "荆", "璋", "均", "詹", "允", "坚", "亭", "余", "袁", "杜", "力", "于", "纬", "汪", "英", "永", "桂", "谕", "清", "俐", "立", "麟", "柳", "娟", "崇", "得", "梅", "宛", "宪", "益", "绮", "全", "远", "毅", "凤", "明", "戴", "予", "名", "萧", "媛", "卿", "乃", "亦", "菱", "颜", "奇", "侯", "慈", "峻", "香", "芝", "山", "魏", "龚", "景", "皓", "善", "莹", "莲", "源", "佑", "诚", "敬", "项", "崔", "筱", "丰", "季", "旭", "弘", "翠", "施", "琦", "希", "童", "曲", "阳", "雄", "尧", "法", "冷", "怀", "千", "男", "钱", "品", "添", "孙", "容", "原", "骆", "苹", "沛", "欧", "良", "介", "诸", "胜", "行", "瑄", "弓", "曾", "花", "克", "程", "旻", "田", "巧", "念", "陆", "斌", "谦", "勇", "辉", "陶", "井", "上", "羽", "义", "晋", "左", "松", "祖", "恭", "湘", "马", "游", "庾", "协", "彬", "葛", "汤", "兰", "登", "敖", "谈", "光", "刁", "邬", "与", "妙", "齐", "阚", "皇", "秉", "庄", "发", "蓝", "孜", "冉", "蒙", "彰", "庆", "新", "嵇", "羊", "牛", "晏", "仕", "又", "镇", "章", "卫", "郦", "泓", "薛", "语", "巫", "房", "重", "翟", "古", "杭", "柴", "宥", "艾", "竺", "呈", "鞠", "岚", "聂", "巩", "鲁", "焦", "浩", "尚", "卞", "宣", "阿", "万", "寇", "奚", "长", "甫", "支", "昱", "夙", "竣", "常", "贲", "甘", "段", "暴", "毕", "幼", "路", "闵", "初", "巴", "伍", "关", "屈", "谚", "朝", "昝", "娄", "顾", "尹", "兴", "伏", "裴", "权", "喻", "经", "范", "利", "茅", "曜", "少", "岑", "鄂", "可", "瞿", "熊", "璩", "米", "滕", "边", "史", "穆", "庞", "甯", "解", "淩", "扈", "钮", "曼", "婕", "霍", "屠", "阎", "仇", "车", "狄", "郎", "之", "宓", "耿", "单", "严", "蒯", "祁", "铃", "贝", "纪", "栾", "符", "湛", "於", "戈", "农", "贾", "席", "贡", "索", "禹", "樊", "苗", "褚", "祝", "宫", "荀", "管", "别", "司", "那"];
        //随机生成姓氏
        $name = $prefixArr[array_rand($prefixArr, 1)];

        //开始拼接名
        if ($length === 1) {
            $name .= $suffixArr[array_rand($suffixArr, 1)];
        } else {
            $keys = array_rand($suffixArr, $length);
            for ($i = 0; $i < sizeof($keys); $i++) {
                $name .= $suffixArr[$keys[$i]];
            }
        }

        return $name;
    }


    /**
     * @Notes:模拟生成昵称
     * @Interface nickName
     * @param bool $enhance 数据增强
     * @return mixed
     * @Author: TS
     * @Time: 2020-06-18   14:14
     */
    public function nickName(bool $enhance = false): string
    {
        $nickNameList = ["男人伤心不流泪", "Ｖip▃__和尚", "Ｖip▃__尼姑", "那一夜丶床摇得很厉害", "悟空好性感，豹纹加钢管", "你若安好、便是老天瞎了眼", "該用戶太懶還沒想好網名", "泡8喝9說10話", "小姐ヽ我是妳惹不起的草°", "男人不能慣越慣越完蛋", "專註人渣20年", "鬧夠了就去吃藥", "分手后的思念是犯贱", "硪的偶像是女汉纸i", "安安稳稳 ヽ",
            "姑娘我疯疯癫颠有理想i", "有你任性.", "我一直都在、", "孤独、也是一种态度゜", "ヅ奈何桥上唱小苹果う", "孟婆！来杯优乐美", "- 胸大无脑鸡大闷骚。", "内裤在美＿终究只能装逼",
            "扯着俩个蛋四处跑骚≠", "酒入悠肠化作姨妈更护花丶", "抬着大炮轰学校°", "宁死被窝不死书桌、", "脚踏两只船丶划得更快", "小猛男", "小淑女", "做最开心的自己", "我爱你胜过爱自己",
            "善良是我本性@", "逆境荒野", "我不愿将就！", "人总是要为自己活", "捧花为你", "我为你代言", "想我所想ひ", "為人民服務", "守心奴i", "难免任性@", "我有多倔强就有多坚强.",
            "愛の過祛", "师太,求你别抽老衲脸", "尼古丁有У1n。╮", "呼吸的余溫很暖。", "日暮途穷￠", "死咣咣", "若隐若现ヽ", "男人为何虚情假意﹌", "温柔的(放肆)", "锁魂Fu2Ⅳ_×",
            "卟再绶鉨诱惑", "__演（自己。", "梦里寻她千百度″", "温柔的败退〃", "蠢蠢欲动", "用心温暖了彼此", "阴霾里的浅唱", "玍亽伆近", "漃莫(加)倍", "平淡Wu 奇╮", "韩小熙り",
            "喂、别丢下我", "hu-a、开场。", "那放肆的青春ˇ", "一梦三四年≈"
        ];
        if ($enhance) {
            try {
                $list = ['aiqing', 'feizhuliu', 'gexing', 'gufeng', 'jiemei', 'keai', 'lizhi', 'nansheng', 'nvsheng', 'qinglv', 'shanggan', 'tuifei', 'weimei', 'xiaoqingxin', 'yingwen', 'youshang'];
                $name = $list[array_rand($list, 1)] . '.php';
                $extendData = [];
                require('Extend/nickname/' . $name);
                $nickNameList = $extendData;
            } catch (Exception $e) {

            }
        }
        return $nickNameList[array_rand($nickNameList, 1)];
    }

    /**
     * @Notes: 模拟生成个性签名
     * @Interface info
     * @return mixed
     * @Author: TS
     * @Time: 2020-06-16   20:52
     */
    public function info():string
    {
        $infoList = ["某段风景，未必就一辈子都不变，那些以为会一直相伴的，原来早已放了手。", "我知道有一天我们会分开，但是我并不害怕，只是舍不得。", "与你擦肩而过的遗忘，是一生的惊涛骇浪。",
            "铁皮公车是坚硬的，柔软的我们要去哪里呢？", "我的关心不过是你看来卑微的讨好，凭什么无怨无悔为你把青春当掉？", "不要以为你晒黑了，就能掩盖你是白痴的事实。",
            "浮华的化妆舞会，散场以后，一个落寞而黯淡的女子，是烟花一样虚空的美丽。", "我不知道，我已经付出的我所有的微笑。", "不要拿爱情做比较，不要计较谁付出的更多。",
            "微笑，不是因为快乐的太久，是太久的时间里忘记去悲伤。", "如果能感受到简简单单的幸福，便不会再次沉溺。", "我们常常讲缘分，但其实是缘分让我们错过了彼此。",
            "再长的路，一步步也能走完，再短的路，不迈开双脚也无法到达。", "当我想装纯的时候，才发现一切都晚了。", "迩，是否已寻到那没有永恒的永恒。", "经过时间旳推移，涐旳心只剩下回忆。",
            "爱，和爱过，相差不多，只是成为了过去时。", "是你把我推下深渊，却责怪我不爱惜自己。", "什么时候，雨水把眼泪悄悄覆盖，回忆在心里开始残落。", "放下过往的沉痛，方能拥抱未来的精彩。",
            "雨后的城市寂寞又狼狈，路边的座位空着在等谁。", "我们在对的时间遇到对的人，才会拥有属于自己幸福的爱情。", "你可以掐掉鲜花，却无法消灭整个春天。", "宿命中的游离和破碎的激情，精致的美丽，可是易碎且易逝。",
            "我知道我们之间不是不适合，只是彼此放手会比较好过。", "姐要让你知道，姐是天生丽质的，是不加任何防腐剂的。", "睡眠是一门艺术——谁也无法阻挡我追求艺术的脚步！", "知识就像内裤，看不到看很重要。",
            "记忆是一张挂满风铃的卷帘，藏匿不了回味里一丝缱绻的痕迹。", "我不是不懂，只是不想懂而已。", "唐僧骑的是神马，悟空腾的是浮云，八戒爱的是小月月，沙僧装的是犀利哥。",
            "化妆前他说借过，化妆后他说美女，我们是否见过。", "诠释不了的悲伤，怎能用文字形容。", "妈，你说的对", "我就是要等到撞的头破血流才知道错。", "分手后还能做朋友吗，想分手就不要再回头。",
            "结局太悲伤，是因为过程太过伤感。", "分手后，打不打伞心都是湿的。", "幸福是什么，幸福就是每天早晨醒来一看表，竟然还能再睡半个小时。", "亲爱的，请给这段爱一个开始，我会用心去写下属于我们的故事。",
            "我们是不是都输给了时间，败给了一个等字？", "在心中旋转的疯狂，抑制住无尽的悲伤。", "飞蛾在投入火焰的瞬间，哪还顾得上什么天长地久？",
            "止不住的痛，就像自己嘴巴里流着血一样，即使再疼，却只能一个人尝这浓浓的血腥味。", "不用花时间在一个不会花时间在你身上的人。", "夏天，肉隐肉现的季节又来了。", "他说的对我们这个年纪谈恋爱只是玩玩而已。",
            "只想安静的生活，安静到谁都遗忘我。", "女人，长得漂亮是优势，活得漂亮才是本事。", "法官问：你为什么印假钞，罪犯说：“真钞我不会印”。", "我一直坚信，忍痛放手过后我们会很会狠幸福。",
            "快乐时装给别人看的另一种痛楚，狂欢是留给自己痛的另一种寂寞。", "纠结在内心的秘密，曾经是不能说出口的话，让人几乎不敢去触碰，只能惶恐不安地日夜躲避。", "曾经试着用微笑细数你给的伤，无奈最后泪却随微笑流出眼眶。",
            "如果我死了，我的第一句话是：老子终于不用怕鬼了……", "如果忘不了你，就让阳光晒干回忆。", "照镜子时，我一般不敢多看，怕自己会爱上自己。", "爱一个人就像是呆在荆棘丛里，心动则人动，动则痛其筋伤其骨。",
            "渐渐疲惫的羽翼，为你披上了勇气。", "迩唱的那首情歌，我用悲伤和。", "不管我过得多么的好，那段伤人的记忆还是不停的在心中打滚。", "没有不变的承诺，只有说不完的谎言。", "我离开迩之后，不会有人比我更爱迩。",
            "爱上内心萌动时，偏在擦身而过后。", "宁愿坐在上笑，也不愿坐在架子车上哭。", "风好大，好大，吹乱了我的秀发，吹落了你的假发。", "再次回头守望，才发现这一切已经走远，我们都在等待花的凋谢，爱的降临。",
            "我们都有一道别人看不见的伤痕。", "其实幸福很简单，美美的吃一餐，也是一种幸福。", "面对心爱的人，你的心跳会加速，然而面对喜欢的人，你只会兴高采烈。", "你就如同秒针转了几个轮回却依然是与我擦肩而过。",
            "我若爱定，生死契阔。", "一切都是自己一心以为，又有什么理由让别人来做。", "生命本是一场漂泊的漫旅，遇见了谁都是一场美丽的意外。", "念了十几年书，想起来还是幼儿园比较好混。",
            "在痛不过前尘往事，在聚首弹指已陌路。", "是情话太美，还是我们太傻。", "扔硬币：正面就去上网", "反面就去睡觉，立起来就去写作业。", "时间，改变了容貌，改变了性格", "改变了一切，却没改变你会继续爱我。",
            "酒味儿有些淡淡的苦涩，幻彩灯光下的酒杯与自己，透彻的耀眼。", "你不喜欢我，这是病，很严重的病哇，得治，一定要治！", "我一直不懂家长们说的集体和全民是啥意思。",
            "爱上你，只用了一瞬间，忘记你却用了一辈子，甚至还不够。", "你以为放手可以成全我的幸福，可你不知道我最大的幸福就是和你手牵手。", "原来我们小时候真的好性感，连裤衩都不穿。",
            "日子像首不押韵的歌，节奏有些凌乱。",
            "眼泪，是我夜晚唯一一个陪在我身边的朋友。", "青春如同奔流的江河，一点一滴的流淌着。", "我看见你第一眼就想咬你一口，但是我嫌你脏。",
            "个女人都是被种种牵绊舒服在滚滚红尘里，以哀伤的心，慢慢独到年华老去，终此一生。", "我想去丹麦亲眼见识一段，安徒生所谓的爱情。", "倘若我放手，你会不会挽留，怕是自欺欺人。",
            "这个社会什么都可以是假的，但是，我唯一不能容忍的就是：钱的假的。", "我像走入死角绝路，不知道转身后就是海阔天空，偏偏一味执着地去战战兢兢面对黑暗，无止无休。", "心总是在最痛时，复苏；爱总是在最深时，落下帷幕。",
            "当眼泪滑落，我才知道，原来我那么惦念你。", "男人最反感老婆喋喋不休，女人最讨厌老公默默无语。", "回忆千丝万缕，思念缱倦流年，昨日种种，红叶黄花，一恍如烟霞。", "女生应该骄傲的活着，而不是卑微的恋爱。",
            "原来，很多时候，最让人疼痛的，是孤独。", "个有个是脑残，剩下的那个是先天性白痴。", "男人长的帅有个屁用呀？到银行能用脸刷卡吗？", "没有一种生命的轮回是命中注定的，就像，隔夜的狂欢。", "挤公交是包含散打",
            "瑜珈", "柔道", "平衡木等多种体育和健身项目于一体的综合性运动。", "我想要一份简简单单的爱情，我不会要求你太多，只爱我一个，虽然我不是最好的，但却是最爱你的那个。",
            "独自一人走在街上时常会寂寞，寂寞时便会想起往事，想起往事便会泪流而下。", "总有一天我们学会不再忧伤，因为我们已经像蝴蝶一样，完成了既定的相聚。", "我的泪变成雨，也舍不得淋湿你。",
            "不想个网名，对不起俺的会员。",
            "丿每一种喜欢都有一种理由！但每一种伤感却是莫明的。", "我在漫天风雪的回忆里披荆斩棘，你却在哪一个的字典里演绎皈依。", "高傲不止是高跟和红唇，我什么都不缺，只是少个人爱我摆了。",
            "无法诠释自己的心情，或许不应该存在的。", "我现在只吃素不吃荤，天天烧香拜佛，还常常行善积德，为的是什么，不就是期考不挂科么。", "是不是只有努力，我才不会成为代替品。",
            "男人感情就是这样，像水龙头一样说关就关了。", "相遇是为了邂逅，还是为了给彼此都留下回忆？", "尓就一颗心，所以哦必须要占据全部。", "戴上面具，我们继续假装快乐。(www.lz.cn)",
            "看到你的脸，就觉得你爸妈在制造你的时候没认真。", "行单影支，拉斜的身影，显落寂寞。", "怎样的一个冬天，我看见烟火幸福满天。又怎样的一个冬天，冷得让我泪流满面。",
            "我这人不懂音乐，所以时而不靠谱，时而不着调。",
            "不要说别人脑子有病，脑子有病的前提是必须有个脑子。", "她的忧伤，只为一些在颓废中荒废的年华。", "天若有情天亦老，女人多情死的早。", "所有的失敗，與失去自己的失敗比起來，更是微不足道。",
            "夏天就是不好，穷的时候我连西北风都没有喝。", "擦干眼泪，抬起头，莪依然拥有最坚强的笑容。", "感情是没有公式，没有原则没有道理可循的，可是人们至死都还在执著与追求。", "喝白开水的人，不一定很纯。"
        ];
        return $infoList[array_rand($infoList, 1)];
    }

    /**
     * @Notes:模拟生成邮箱
     * @Interface email
     * @param string $length
     * @return string
     * @Author: TS
     * @Time: 2020-06-16   20:57
     */
    public function email(int $length = -1): string
    {
        $emailSuffix = ["@qq.com", "@gmail.com", "@163.com", "@yahoo.com", "@msn.com", "@hotmail.com", "@aol.com", "@ask.com", "@live.com", "@0355.net", "@163.net", "@263.net", "@3721.net", "@139.com", "@189.com", "@126.com"];
        $length === -1 && $length = rand(3, 10);
        $str = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890';
        $randStr = str_shuffle($str);//打乱字符串
        $rands = substr($randStr, 0, $length);//substr(string,start,length);返回字符串的一部分
        $email = $rands . $emailSuffix[array_rand($emailSuffix, 1)];
        return $email;

    }

    /**
     * @Notes: 模拟生成手机号
     * @Interface phone
     * @return mixed|string
     * @Author: TS
     * @Time: 2020-06-16   20:59
     */
    public function phone(): string
    {
        $preList = array("139", "138", "137", "136", "135", "134", "159", "158", "157", "150", "151", "152", "188", "187", "182", "183", "184", "178", "130", "131", "132", "156", "155", "186", "185", "176", "133", "153", "189", "180", "181", "177");
        $phone = $preList[array_rand($preList, 1)];
        for ($i = 0; $i < 8; $i++) {
            $phone .= rand(0, 9);
        }
        return $phone;
    }

    /**
     * @Notes: 模拟生成民族
     * @Interface nation
     * @return mixed
     * @Author: TS
     * @Time: 2020-06-16   21:00
     */
    public function nation(): string
    {
        $list = array("汉族", "蒙古族", "回族", "藏族", "维吾尔族", "苗族", "彝族", "壮族", "布依族", "朝鲜族", "满族", "侗族", "瑶族", "白族", "土家族",
            "哈尼族", "哈萨克族", "傣族", "黎族", "僳僳族", "佤族", "畲族", "高山族", "拉祜族", "水族", "东乡族", "纳西族", "景颇族", "柯尔克孜族", "土族", "达斡尔族",
            "仫佬族", "羌族", "布朗族", "撒拉族", "毛南族", "仡佬族", "锡伯族", "阿昌族", "普米族", "塔吉克族", "怒族", "乌孜别克族", "俄罗斯族", "鄂温克族", "德昂族",
            "保安族", "裕固族", "京族", "塔塔尔族", "独龙族", "鄂伦春族", "赫哲族", "门巴族", "珞巴族", "基诺族"
        );

        return $list[array_rand($list, 1)];
    }

    /**
     * @Notes: 模拟生成地址
     * @Interface home
     * @return string
     * @Author: TS
     * @Time: 2020-06-16   21:14
     */
    public function home(): string
    {
        $list = array('区', '社区', '小区', '大厦', '新城', '大楼', '街', '路');
        $pre = $list[array_rand($list, 1)];
        $home = $this->chinese(rand(0, 1) == 1 ? 2 : 4) . $pre;
        if ($pre == '街' || $pre == '路') {
            $home .= rand(1, 888) . '号';
        } else {
            $home = $this->chinese(rand(0, 1) == 1 ? 2 : 4) . $pre;
            if ($pre == '大厦' || $pre == '新城' || $pre == '大楼') {
                $unitList = ['A', 'B', 'C', 'D'];
                $home .= $unitList[array_rand($unitList, 1)] . '座' . rand(1, 30) . sprintf("%02d", rand(1, 30));
            } else {
                $home .= rand(1, 30) . '栋' . rand(1, 6) . '单元' . rand(1, 30) . sprintf("%02d", rand(1, 10));
            }
        }
        return $home;
    }

    public function addressCode(): int
    {
        $Region = [];   //区域代码
        require('Extend/idCardRegonData.php');
        return $Region[array_rand($Region, 1)];
    }

    /**
     * @Notes:模拟生成身份证号码
     * @Interface idCard
     * @param int $minAge 最小年龄
     * @param int $maxAge 最大年龄
     * @return string
     * @Author: TS
     * @Time: 2020-06-16   21:28
     */
    public function idCard(int $minAge = 6, int $maxAge = 60): string
    {
        $idCard = '';
        $nowYear = date('Y');
        $Year_start = mktime(0, 0, 0, 1, 1, $nowYear - $maxAge);    //最大年龄出生年份
        $Year_end = mktime(0, 0, 0, 12, 31, $nowYear - $minAge);    //最小年龄出生 年份
        $Region = [];   //区域代码
        require('Extend/idCardRegonData.php');
        $seed = mt_rand(0, 3130);//区域总数为3130
        $Birth = mt_rand($Year_start, $Year_end);
        $Birth_format = date('Ymd', $Birth);
        $suffix_a = mt_rand(0, 9);
        $suffix_b = mt_rand(0, 9);
        $suffix_c = mt_rand(0, 9);//男 或 女
        $idCard = $Region[$seed] . $Birth_format . $suffix_a . $suffix_b . $suffix_c;
        $factor = array(7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2);//加权因子
        $sums = 0;
        for ($i = 0; $i < 17; $i++) {
            $sums += substr($idCard, $i, 1) * $factor[$i];
        }
        $mods = $sums % 11;//10X98765432
        $expList = array(1, 0, "X", 9, 8, 7, 6, 5, 4, 3, 2);//校验码
        $idCard .= $expList[$mods];
        return $idCard;
    }

    /**
     * @Notes: 模拟生成国内IP
     * @Interface ip
     * @return string
     * @Author: TS
     * @Time: 2020-06-16   21:42
     */
    public function ip(): string
    {
        $ip_long = array(
            array('607649792', '608174079'), // 36.56.0.0-36.63.255.255
            array('1038614528', '1039007743'), // 61.232.0.0-61.237.255.255
            array('1783627776', '1784676351'), // 106.80.0.0-106.95.255.255
            array('2035023872', '2035154943'), // 121.76.0.0-121.77.255.255
            array('2078801920', '2079064063'), // 123.232.0.0-123.235.255.255
            array('-1950089216', '-1948778497'), // 139.196.0.0-139.215.255.255
            array('-1425539072', '-1425014785'), // 171.8.0.0-171.15.255.255
            array('-1236271104', '-1235419137'), // 182.80.0.0-182.92.255.255
            array('-770113536', '-768606209'), // 210.25.0.0-210.47.255.255
            array('-569376768', '-564133889'), // 222.16.0.0-222.95.255.255
        );
        $rand_key = mt_rand(0, 9);
        return $ip = long2ip(mt_rand($ip_long[$rand_key][0], $ip_long[$rand_key][1]));
    }

    /**
     * @Notes: 模拟生成出生日期
     * @Interface birthday
     * @param int $min
     * @param int $max
     * @return false|string
     * @Author: TS
     * @Time: 2020-06-18   14:00
     */
    public function birthday(int $min = 6, int $max = 60): string
    {
        $age = rand($min, $max);
        $month = rand(1, 12);
        $dayMax = 28;
        if (in_array($month, [1, 3, 5, 7, 8, 10, 12])) {
            $dayMax = 31;
        }
        if (in_array($month, [4, 6, 9, 11])) {
            $dayMax = 30;
        }
        $day = rand(1, $dayMax);
        $ageTime = mktime(0, 0, 0, $month, $day, date('Y') - $age);
        return date('Y-m-d', $ageTime);
    }
}